#ifndef UI_H
#define UI_H

#include <ngl/Obj.h>
#include <ngl/VertexArrayObject.h>
#include <ngl/Transformation.h>
#include "Gameplay.h"

/// \author Michael Woods
/// \version 1.0
/// \date 16/5/20177

/// \class Ui
/// \brief This is the class for the creation of the UI.

class UI
{
public:
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief constructor
    //----------------------------------------------------------------------------------------------------------------------
    UI();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief drawsquad to screen
    /// @param[in] texture ID
    //----------------------------------------------------------------------------------------------------------------------
    void drawQuad(int _UItexID);
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief initialises the UI quad
    //----------------------------------------------------------------------------------------------------------------------
    void initUI();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief method to load matrices to shader
    //----------------------------------------------------------------------------------------------------------------------
    void loadMatricesToUIShader();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief draws quads with textures of hearts that match what health you're on
    /// @param[in]_heartcount is the value of the life count
    //----------------------------------------------------------------------------------------------------------------------
    void drawLifeCount(int _heartCount);
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief draws dialogue based on what stage of the quest you're on
    /// @param[in] _cureStage reads the cure stage value from game
    //----------------------------------------------------------------------------------------------------------------------
    void drawDialogue(int _cureStage);
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief draws both the lifecount and heartcount together
    /// @param[in] _heartcount gets what life you're on, _curestage gets the quest stage
    //----------------------------------------------------------------------------------------------------------------------
    void drawUI(int _heartCount, int _cureStage);
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief decrement the timer
    //----------------------------------------------------------------------------------------------------------------------
    void decrementUITimer();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief resets the timer
    //----------------------------------------------------------------------------------------------------------------------
    void timerReset();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief draws death screen if you're killed by enemies
    //----------------------------------------------------------------------------------------------------------------------
    void deathByEnemiesScreen();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief draws death screen if the volcano erupts
    //----------------------------------------------------------------------------------------------------------------------
    void deathByVolcanoScreen();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief draws death screen if the disease timer ends
    //----------------------------------------------------------------------------------------------------------------------
    void deathByDiseaseScreen();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief scales the exit buttons
    //----------------------------------------------------------------------------------------------------------------------
    void exitButtonScaling();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief draws the exit buttons
    //----------------------------------------------------------------------------------------------------------------------
    void drawExitOptions();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief increases exit state
    //----------------------------------------------------------------------------------------------------------------------
    void increaseExitState();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief decreases exit state
    //----------------------------------------------------------------------------------------------------------------------
    void decreaseExitState();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief sets the boolean, true means the timer is running, false means it isnt
    /// @param[in] _triggerTimer passed through to set the value
    //----------------------------------------------------------------------------------------------------------------------
    void setTriggerTimer(bool _triggerTimer);
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief sets the flag to restart the game
    /// @param[in] _restartFlag is passed through and set as the value
    //----------------------------------------------------------------------------------------------------------------------
    void setRestartFlag(bool _restartFlag);
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief sets the boolean if the player chooses to restart
    /// @param[in] passes _exitQuestion as value to set the boolean
    //----------------------------------------------------------------------------------------------------------------------
    void setExitQuestionFlag(bool _exitQuestion);
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief switches between the exit states
    //----------------------------------------------------------------------------------------------------------------------
    void exitStateSwitch();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief draws win screen
    //----------------------------------------------------------------------------------------------------------------------
    void winScreen();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief set flag for whether the user wants to exit
    /// @param[in] boolean is passed through to tell us if the user exits
    //----------------------------------------------------------------------------------------------------------------------
    void setExitFlag(bool exitFlag);
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief gets boolean to tell the game whether to trigger the UI timer
    //----------------------------------------------------------------------------------------------------------------------
    bool getTriggerTimer() const;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief gets the flag to control whether the player chose to restart the game
    //----------------------------------------------------------------------------------------------------------------------
    bool getRestartFlag() const;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief gets flag for whether the user wants to exit
    //----------------------------------------------------------------------------------------------------------------------
    bool getExitFlag() const;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief gets boolean to determine whether the player is asked to restart
    //----------------------------------------------------------------------------------------------------------------------
    bool getExitQuestionFlag() const;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief gets value of the UI timer
    //----------------------------------------------------------------------------------------------------------------------
    int getUiTimer() const;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief draws a message saying the player is safe from the volcano erupting
    //----------------------------------------------------------------------------------------------------------------------
    void SafeFromVolcanoScreen();

private:
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief   button 1 scale
    //----------------------------------------------------------------------------------------------------------------------
    int m_buttonScale1;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief button 2 scale
    //----------------------------------------------------------------------------------------------------------------------
    int m_buttonScale2;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief variable to control exit state
    //----------------------------------------------------------------------------------------------------------------------
    int m_exitState;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief a timer that determines how long the dialogue is on the screen for
    //----------------------------------------------------------------------------------------------------------------------
    int m_uiTimer;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief flag to tell the game to restart or not
    //----------------------------------------------------------------------------------------------------------------------
    bool m_restartFlag;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief flag which triggers the exit question to draw to scene
    //----------------------------------------------------------------------------------------------------------------------
    bool exitQuestionFlag;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief flag to tell the game exit
    //----------------------------------------------------------------------------------------------------------------------
    bool m_exitFlag;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief flag to trigger a timer
    //----------------------------------------------------------------------------------------------------------------------
    bool m_triggerTimer;
    //----------------------------------------------------------------------------------------------------------------------
    ///@brief instance of class gameplay
    //----------------------------------------------------------------------------------------------------------------------
    gamePlay m_gamePlay;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief vector of texture IDs
    //----------------------------------------------------------------------------------------------------------------------
    std::vector<GLint> m_menuTextureId;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief VAO for the UI quad
    //----------------------------------------------------------------------------------------------------------------------
    std::unique_ptr<ngl::VertexArrayObject> m_UI;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief class instance of transformation, to allow for transformations onto the VAOs
    //----------------------------------------------------------------------------------------------------------------------
    ngl::Transformation m_UITransform;


};

#endif // UI_H
